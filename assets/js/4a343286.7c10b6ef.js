"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1124],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return n?a.createElement(k,i(i({ref:t},m),{},{components:n})):a.createElement(k,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7704:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"keycloak_oidc",title:"Keycloak OIDC"},p=void 0,s={unversionedId:"configuration/providers/keycloak_oidc",id:"configuration/providers/keycloak_oidc",title:"Keycloak OIDC",description:"Keycloak has updated its admin console and as of version 19.0.0, the new admin console is enabled by default. The",source:"@site/docs/configuration/providers/keycloak_oidc.md",sourceDirName:"configuration/providers",slug:"/configuration/providers/keycloak_oidc",permalink:"/oauth2-proxy/docs/next/configuration/providers/keycloak_oidc",draft:!1,editUrl:"https://github.com/oauth2-proxy/oauth2-proxy/edit/master/docs/docs/configuration/providers/keycloak_oidc.md",tags:[],version:"current",frontMatter:{id:"keycloak_oidc",title:"Keycloak OIDC"},sidebar:"docs",previous:{title:"Keycloak",permalink:"/oauth2-proxy/docs/next/configuration/providers/keycloak"},next:{title:"GitLab",permalink:"/oauth2-proxy/docs/next/configuration/providers/gitlab"}},m={},c=[],u={toc:c},d="wrapper";function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    --provider=keycloak-oidc\n    --client-id=<your client's id>\n    --client-secret=<your client's secret>\n    --redirect-url=https://internal.yourcompany.com/oauth2/callback\n    --oidc-issuer-url=https://<keycloak host>/realms/<your realm> // For Keycloak versions <17: --oidc-issuer-url=https://<keycloak host>/auth/realms/<your realm>\n    --email-domain=<yourcompany.com> // Validate email domain for users, see option documentation\n    --allowed-role=<realm role name> // Optional, required realm role\n    --allowed-role=<client id>:<client role name> // Optional, required client role\n    --allowed-group=</group name> // Optional, requires group client scope\n    --code-challenge-method=S256 // PKCE\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Keycloak has updated its admin console and as of version 19.0.0, the new admin console is enabled by default. The\nlegacy admin console has been announced for removal with the release of version 21.0.0.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Keycloak legacy admin console")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create new client in your Keycloak realm with ",(0,o.kt)("strong",{parentName:"li"},"Access Type")," 'confidential', ",(0,o.kt)("strong",{parentName:"li"},"Client protocol"),"  'openid-connect'\nand ",(0,o.kt)("strong",{parentName:"li"},"Valid Redirect URIs")," '",(0,o.kt)("a",{parentName:"li",href:"https://internal.yourcompany.com/oauth2/callback'"},"https://internal.yourcompany.com/oauth2/callback'")),(0,o.kt)("li",{parentName:"ol"},"Take note of the Secret in the credential tab of the client"),(0,o.kt)("li",{parentName:"ol"},"Create a mapper with ",(0,o.kt)("strong",{parentName:"li"},"Mapper Type")," 'Group Membership' and ",(0,o.kt)("strong",{parentName:"li"},"Token Claim Name")," 'groups'."),(0,o.kt)("li",{parentName:"ol"},"Create a mapper with ",(0,o.kt)("strong",{parentName:"li"},"Mapper Type")," 'Audience' and ",(0,o.kt)("strong",{parentName:"li"},"Included Client Audience")," and ",(0,o.kt)("strong",{parentName:"li"},"Included Custom Audience")," set\nto your client name.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Keycloak new admin console (default as of v19.0.0)")),(0,o.kt)("p",null,"The following example shows how to create a simple OIDC client using the new Keycloak admin2 console. However, for best\npractices, it is recommended to consult the Keycloak documentation."),(0,o.kt)("p",null,"The OIDC client must be configured with an ",(0,o.kt)("em",{parentName:"p"},"audience mapper")," to include the client's name in the ",(0,o.kt)("inlineCode",{parentName:"p"},"aud")," claim of the JWT token.",(0,o.kt)("br",{parentName:"p"}),"\n","The ",(0,o.kt)("inlineCode",{parentName:"p"},"aud")," claim specifies the intended recipient of the token, and OAuth2 Proxy expects a match against the values of\neither ",(0,o.kt)("inlineCode",{parentName:"p"},"--client-id")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"--oidc-extra-audience"),"."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},'In Keycloak, claims are added to JWT tokens through the use of mappers at either the realm level using "client scopes" or\nthrough "dedicated" client mappers.')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Creating the client")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new OIDC client in your Keycloak realm by navigating to:",(0,o.kt)("br",{parentName:"li"}),(0,o.kt)("strong",{parentName:"li"},"Clients")," -> ",(0,o.kt)("strong",{parentName:"li"},"Create client"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Client Type")," 'OpenID Connect'"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Client ID")," ",(0,o.kt)("inlineCode",{parentName:"li"},"<your client's id>"),", please complete the remaining fields as appropriate and click ",(0,o.kt)("strong",{parentName:"li"},"Next"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Client authentication")," 'On'"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Authentication flow"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Standard flow"),"  'selected'"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Direct access grants")," 'deselect'",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Save the configuration.")))))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Settings / Access settings"),":",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Valid redirect URIs")," ",(0,o.kt)("inlineCode",{parentName:"li"},"https://internal.yourcompany.com/oauth2/callback"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Save the configuration.")))))),(0,o.kt)("li",{parentName:"ul"},"Under the ",(0,o.kt)("strong",{parentName:"li"},"Credentials")," tab you will now be able to locate ",(0,o.kt)("inlineCode",{parentName:"li"},"<your client's secret>"),"."))))),(0,o.kt)("li",{parentName:"ol"},"Configure a dedicated ",(0,o.kt)("em",{parentName:"li"},"audience mapper")," for your client by navigating to ",(0,o.kt)("strong",{parentName:"li"},"Clients")," -> ",(0,o.kt)("strong",{parentName:"li"},"<your client's id>")," -> ",(0,o.kt)("strong",{parentName:"li"},"Client scopes"),".")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Access the dedicated mappers pane by clicking ",(0,o.kt)("strong",{parentName:"li"},"<your client's id>-dedicated"),", located under ",(0,o.kt)("em",{parentName:"li"},"Assigned client scope"),".",(0,o.kt)("br",{parentName:"li"}),(0,o.kt)("em",{parentName:"li"},'(It should have a description of "Dedicated scope and mappers for this client")'),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Configure a new mapper")," and select ",(0,o.kt)("strong",{parentName:"li"},"Audience"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Name")," 'aud-mapper-<your client's id>'"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Included Client Audience")," select ",(0,o.kt)("inlineCode",{parentName:"li"},"<your client's id>")," from the dropdown.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"OAuth2 proxy can be set up to pass both the access and ID JWT tokens to your upstream services.\nIf you require additional audience entries, you can use the ",(0,o.kt)("strong",{parentName:"em"},"Included Custom Audience"),' field in addition\nto the "Included Client Audience" dropdown. Note that the "aud" claim of a JWT token should be limited and\nonly specify its intended recipients.')))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Add to ID token")," 'On'"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Add to access token")," 'On' - ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/oauth2-proxy/oauth2-proxy/pull/1916"},"#1916"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Save the configuration.")))))))),(0,o.kt)("li",{parentName:"ul"},"Any subsequent dedicated client mappers can be defined by clicking ",(0,o.kt)("strong",{parentName:"li"},"Dedicated scopes")," -> ",(0,o.kt)("strong",{parentName:"li"},"Add mapper")," ->\n",(0,o.kt)("strong",{parentName:"li"},"By configuration")," -> ",(0,o.kt)("em",{parentName:"li"},"Select mapper"))),(0,o.kt)("p",null,"You should now be able to create a test user in Keycloak and get access to the OAuth2 Proxy instance, make sure to set\nan email address matching ",(0,o.kt)("inlineCode",{parentName:"p"},"<yourcompany.com>")," and select ",(0,o.kt)("em",{parentName:"p"},"Email verified"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Authorization")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"OAuth2 Proxy will perform authorization by requiring a valid user, this authorization can be extended to take into\naccount a user's membership in Keycloak ",(0,o.kt)("inlineCode",{parentName:"em"},"groups"),", ",(0,o.kt)("inlineCode",{parentName:"em"},"realm roles"),", and ",(0,o.kt)("inlineCode",{parentName:"em"},"client roles")," using the keycloak-oidc provider options",(0,o.kt)("br",{parentName:"em"}),(0,o.kt)("inlineCode",{parentName:"em"},"--allowed-role")," or ",(0,o.kt)("inlineCode",{parentName:"em"},"--allowed-group"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Roles")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"A standard Keycloak installation comes with the required mappers for ",(0,o.kt)("strong",{parentName:"em"},"realm roles")," and ",(0,o.kt)("strong",{parentName:"em"},"client roles"),' through the\npre-defined client scope "roles". This ensures that any roles assigned to a user are included in the ',(0,o.kt)("inlineCode",{parentName:"em"},"JWT"),' tokens when\nusing an OIDC client that has the "Full scope allowed" feature activated, the feature is enabled by default.')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Creating a realm role")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Navigate to ",(0,o.kt)("strong",{parentName:"li"},"Realm roles")," -> ",(0,o.kt)("strong",{parentName:"li"},"Create role"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Role name"),", ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"em"},"<realm role name>"))," -> ",(0,o.kt)("strong",{parentName:"li"},"save"))))),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Creating a client role")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Navigate to ",(0,o.kt)("strong",{parentName:"li"},"Clients")," -> ",(0,o.kt)("inlineCode",{parentName:"li"},"<your client's id>")," -> ",(0,o.kt)("strong",{parentName:"li"},"Roles")," -> ",(0,o.kt)("strong",{parentName:"li"},"Create role"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Role name"),", ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"em"},"<client role name>"))," -> ",(0,o.kt)("strong",{parentName:"li"},"save"))))),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Assign a role to a user")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Users")," -> ",(0,o.kt)("em",{parentName:"p"},"Username")," -> ",(0,o.kt)("strong",{parentName:"p"},"Role mapping")," -> ",(0,o.kt)("strong",{parentName:"p"},"Assign role")," -> ",(0,o.kt)("em",{parentName:"p"},"filter by roles or clients and select")," -> ",(0,o.kt)("strong",{parentName:"p"},"Assign"),"."),(0,o.kt)("p",null,'Keycloak "realm roles" can be authorized using the ',(0,o.kt)("inlineCode",{parentName:"p"},"--allowed-role=<realm role name>"),' option, while "client roles" can be\nevaluated using ',(0,o.kt)("inlineCode",{parentName:"p"},"--allowed-role=<your client's id>:<client role name>"),"."),(0,o.kt)("p",null,"You may limit the ",(0,o.kt)("em",{parentName:"p"},"realm roles")," included in the JWT tokens for any given client by navigating to:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Clients")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"<your client's id>")," -> ",(0,o.kt)("strong",{parentName:"p"},"Client scopes")," ->  ",(0,o.kt)("em",{parentName:"p"},"<your client's id>-dedicated")," -> ",(0,o.kt)("strong",{parentName:"p"},"Scope"),(0,o.kt)("br",{parentName:"p"}),"\n","Disabling ",(0,o.kt)("strong",{parentName:"p"},"Full scope allowed")," activates the ",(0,o.kt)("strong",{parentName:"p"},"Assign role")," option, allowing you to select which roles, if assigned\nto a user, will be included in the user's JWT tokens. This can be useful when a user has many associated roles, and you\nwant to reduce the size and impact of the JWT token."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Groups")),(0,o.kt)("p",null,"You may also do authorization on group memberships by using the OAuth2 Proxy option ",(0,o.kt)("inlineCode",{parentName:"p"},"--allowed-group"),".",(0,o.kt)("br",{parentName:"p"}),"\n","We will only do a brief description of creating the required ",(0,o.kt)("em",{parentName:"p"},"client scope")," ",(0,o.kt)("strong",{parentName:"p"},"groups")," and refer you to read the Keycloak\ndocumentation."),(0,o.kt)("p",null,"To summarize, the steps required to authorize Keycloak group membership with OAuth2 Proxy are as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a new Client Scope with the name ",(0,o.kt)("strong",{parentName:"li"},"groups")," in Keycloak.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Include a mapper of type ",(0,o.kt)("strong",{parentName:"li"},"Group Membership"),"."),(0,o.kt)("li",{parentName:"ul"},'Set the "Token Claim Name" to ',(0,o.kt)("strong",{parentName:"li"},"groups")," or customize by matching it to the ",(0,o.kt)("inlineCode",{parentName:"li"},"--oidc-groups-claim")," option of OAuth2 Proxy."),(0,o.kt)("li",{parentName:"ul"},'If the "Full group path" option is selected, you need to include a "/" separator in the group names defined in the\n',(0,o.kt)("inlineCode",{parentName:"li"},"--allowed-group"),' option of OAuth2 Proxy. Example: "/groupname" or "/groupname/child_group".')))),(0,o.kt)("p",null,"After creating the ",(0,o.kt)("em",{parentName:"p"},"Client Scope")," named ",(0,o.kt)("em",{parentName:"p"},"groups")," you will need to attach it to your client.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("strong",{parentName:"p"},"Clients")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"<your client's id>")," -> ",(0,o.kt)("strong",{parentName:"p"},"Client scopes")," -> ",(0,o.kt)("strong",{parentName:"p"},"Add client scope")," -> Select ",(0,o.kt)("strong",{parentName:"p"},"groups")," and choose Optional\nand you should now have a client that maps group memberships into the JWT tokens so that Oauth2 Proxy may evaluate them."),(0,o.kt)("p",null,"Create a group by navigating to ",(0,o.kt)("strong",{parentName:"p"},"Groups")," -> ",(0,o.kt)("strong",{parentName:"p"},"Create group")," and ",(0,o.kt)("em",{parentName:"p"},"add")," your test user as a member."),(0,o.kt)("p",null,"The OAuth2 Proxy option ",(0,o.kt)("inlineCode",{parentName:"p"},"--allowed-group=/groupname")," will now allow you to filter on group membership"),(0,o.kt)("p",null,"Keycloak also has the option of attaching roles to groups, please refer to the Keycloak documentation for more information."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Tip")),(0,o.kt)("p",null,"To check if roles or groups are added to JWT tokens, you can preview a users token in the Keycloak console by following\nthese steps: ",(0,o.kt)("strong",{parentName:"p"},"Clients")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"<your client's id>")," -> ",(0,o.kt)("strong",{parentName:"p"},"Client scopes")," -> ",(0,o.kt)("strong",{parentName:"p"},"Evaluate"),".",(0,o.kt)("br",{parentName:"p"}),"\n","Select a ",(0,o.kt)("em",{parentName:"p"},"realm user")," and optional ",(0,o.kt)("em",{parentName:"p"},"scope parameters")," such as groups, and generate the JSON representation of an access\nor id token to examine its contents."))}k.isMDXComponent=!0}}]);